@model NoteAppMVCPattern.Models.ViewModel.NoteIndexVM
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    ViewData["Title"] = "Notlar";
}
@await Html.PartialAsync("_ViewModePartial", Model.ViewMode)
@await Html.PartialAsync("_TempDataMessage")
<div class="container py-4">

    @if (Model.Notes.Count == 0)
    {
        <!-- Empty State -->
        <div class="text-center mt-5">
            <i class="bi bi-journal-x display-1 text-muted mb-3"></i>
            <p class="lead">Hiç notun yok.</p>
            <a asp-action="Create" class="btn btn-lg btn-primary">
                <i class="bi bi-journal-plus"></i> İlk Notunu Ekle
                
            </a>
        </div>
    }
    else
    {   @* <div>
        @if (Model.CurrentTag != null)
        {
            <a class="btn btn-danger" asp-action="Index"> Filtreyi Kaldır </a>
        }
        </div> *@
        <div class="d-flex justify-content-end gap-2 mb-3 ms-2">
            @if (Model.CurrentTag != null)
            {
                <a class="btn btn-danger" asp-action="Index"> Filtreyi Kaldır </a>
            }
            <a asp-action="Create" class="btn btn-primary">
                <i class="bi bi-journal-plus"></i> Yeni Not
            </a>

            <div class="btn-group">
                <button type="button" class="btn btn-primary dropdown-toggle me-3" data-bs-toggle="dropdown">
                    Sırala
                </button>
                <ul class="dropdown-menu">
                    <li><a class="dropdown-item" asp-action="Index" asp-route-sortOrder="date_desc">Yeniden --> Eskiye</a></li>
                    <li><a class="dropdown-item" asp-action="Index" asp-route-sortOrder="date_asc">Eskiden --> Yeniye</a></li>
                    <li><hr class="dropdown-divider"></li>
                    <li class="dropdown-header">Tag'e Göre</li>
                    @foreach (var tag in Model.Tags)
                    {
                        <li><a class="dropdown-item" asp-action="Index" asp-route-tag="@tag">@tag</a></li>                        
                    }                  
                </ul>
            </div>
        </div>
        // View Modes
        <div class="row g-3">
           @if(Model.ViewMode == "grid")
           { 
               @foreach (var note in Model.Notes)
            {
                    <div class="col-12 col-sm-6 col-md-4 mb-4">
                        <div class="card h-100 text-white bg-dark border-4">

                            @if (!string.IsNullOrEmpty(note.Tag))
                            {
                                <span class="badge bg-info text-dark">#@note.Tag</span>
                            }

                            <div class="card-body">
                                <h5 class="card-title">@note.Title</h5>
                                <p class="card-text text-truncate">@note.Content</p>
                                <p class="card-subtitle text-white-50 text-end text-break">@note.CreateDate.ToShortDateString()</p>
                            </div>

                            <div class="card-footer d-flex justify-content-between align-items-center">

                                <div class="btn-group">
                                    <form asp-action="Update" asp-route-id="@note.Id" method="get">
                                        <button type="submit" class="btn btn-primary btn-sm me-2">
                                            <i class="bi bi-pencil-square me-1"></i> Düzenle
                                        </button>
                                    </form>
                                    <form asp-action="Delete" asp-route-id="@note.Id" method="post"
                                          onsubmit="return confirm('@note.Title isimli notu silmek istediğinizden emin misiniz?')">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn btn-danger btn-sm me-2">
                                            <i class="bi bi-trash3"></i> Sil
                                        </button>
                                    </form>
                                </div>

                                <div class="dropdown">
                                    <button type="button" class="btn btn-outline-primary btn-sm dropdown-toggle"
                                            data-bs-toggle="dropdown" style="min-width: 50px">
                                        <i class="bi bi-gear"></i> Seçenekler
                                    </button>

                                    <ul class="dropdown-menu dropdown-menu-end p-2" style="min-width: 180px; max-width: 200px;">
                                        <li class="mb-2">
                                            @if (string.IsNullOrEmpty(note.Tag))
                                            {
                                                <form asp-action="AddTag" method="post">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="id" value="@note.Id" />
                                                    <input type="text" name="tag" class="form-control form-control-sm mb-2"
                                                           placeholder="Tag gir" />
                                                    <button type="submit" class="btn btn-info btn-sm w-100">
                                                        <i class="bi bi-bookmark-plus"></i> Ekle
                                                    </button>
                                                </form>
                                            }
                                        </li>

                                        @if (!string.IsNullOrEmpty(note.Tag))
                                        {
                                            <li class="mb-2">
                                                <form asp-action="DeleteTag" method="post">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="id" value="@note.Id" />
                                                    <button type="submit" class="btn btn-danger btn-sm w-100">
                                                        <i class="bi bi-bookmark-x"></i> Tag'i Sil
                                                    </button>
                                                </form>
                                            </li>
                                        }

                                        
                                        
                                        @if (string.IsNullOrEmpty(note.Tag))
                                        {
                                            <li><hr class="dropdown-divider my-2"></li>
                                            <li class="dropdown-header">Bu Tag'e Ekle</li>
                                            @foreach (var tag in Model.Tags)
                                            {
                                                <li>
                                                    <form asp-action="AddTag" method="post" style="display:inline;">
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="id" value="@note.Id" />
                                                        <input type="hidden" name="tag" value="@tag" />
                                                        <button type="submit" class="dropdown-item text-truncate">@tag</button>
                                                    </form>
                                                </li>
                                            }
                                        }
                                    </ul>
                                </div>

                            </div>
                        </div>
                    </div>
                }
                // List View Mode
            } else if(Model.ViewMode == "list")
            {               
                    <ul class="list-group">
                        
                        @for (int i = 0; i<Model.Notes.Count; i++)
                        {
                        <li class="list-group-item d-flex align-items-start">
                            <!-- Numara -->
                            <div class="me-2 text-muted fw-bold display-6">
                                @(i + 1)
                            </div>

                            <!-- Not içeriği -->
                            <div>
                                <h5 class="mb-1">@Model.Notes[i].Title</h5>
                                <p class="mb-0 text-muted small">@Model.Notes[i].Content</p>                                
                            </div>
                            @* <div class="text-end">@Model.Notes[i].CreateDate.ToShortDateString()</div>
                            <span class="align-text-top">merhaba</span> *@
                        </li>
                        }
                    </ul>
            }
        </div>
    }
    
</div>

@* <div class="d-flex gap-2 mb-3">
    <a asp-action="Index" asp-route-viewMode="grid" class="btn btn-primary">Grid</a>
    <a asp-action="Index" asp-route-viewMode="list" class="btn btn-secondary">Liste</a>
    <a asp-action="Index" asp-route-viewMode="compact" class="btn btn-info">Compact</a>
</div> 




@if (TempData["Message"] != null)
{
	<div id="successMsg" class="alert alert-success mt-3">
		@TempData["Message"]
	</div>
	<script>
		document.addEventListener('DOMContentLoaded', function() {
			setTimeout(function() {
				var msg = document.getElementById('successMsg');
				if (msg) {
					msg.style.transition = 'opacity 0.5s ease';
					msg.style.opacity = '0';
					setTimeout(function() {
						msg.remove();
					}, 500);
				}
			}, 2000);
		});
	</script>
} 

@* <a asp-action="Create" class="btn btn-primary">Yeni Kullanıcı</a>
@if (TempData["Message"] != null)
{
    <div id="successMsg" class="alert alert-success mt-3">
        @TempData["Message"]
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            setTimeout(function () {
                $('#successMsg').fadeOut(500, function () {
                    // Burada istersen başka işlemler de yapabilirsin
                });
            }, 2000);
        });
    </script>
} 
// <table class="table">
// 	<thead>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.getElementById('AddTag').addEventListener('click', submitTag);

        document.querySelector('[data-action="openTagModal"]').addEventListener('click', function () {
            const modal = new bootstrap.Modal(document.getElementById('tagInlineModal'));
            modal.show();
        });
    });

    function submitTag() {
        const tag = document.getElementById('tagInput').value;

        fetch('/YourController/AddTag', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            },
            body: JSON.stringify({ tag: tag })
        })
        .then(response => {
            if (response.ok) {
                const modal = bootstrap.Modal.getInstance(document.getElementById('tagInlineModal'));
                modal.hide();
            }
        });
    }
</script>

*@ 
@*
// 		<tr>
// 			<th>Not İsmi</th>
// 			<th>Not İçeriği</th>
// 		</tr>
// 	</thead>
// 	<tbody>
// 		@foreach (var note in Model)
// 		{
// 			<tr>
// 				<td>@note.Title</td>
// 				<td>@note.Content</td>
// 				<td>
// 					<a asp-action="Create" class="btn btn-primary btn-sm">Yeni Not Ekle</a>

// 					<a asp-action="Update" asp-route-id="@note.Id" class="btn btn-primary btn-sm">Düzenle</a>

// 					<!-- Basit JavaScript Confirm ile Silme -->
// 					<form asp-action="Delete" asp-route-id="@note.Id" method="post" style="display: inline;"
// 						  onsubmit="return confirm('@note.Title notunu silmek istediğinizden emin misiniz?')">
// 						<button type="submit" class="btn btn-danger btn-sm">Sil</button>
// 					</form>

// 				</td>
// 			</tr>
// 		}
// 	</tbody>
// </table>

*@



@* <table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>İsim</th>
            <th>İşlemler</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.Id</td>
                <td>@user.UserName</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-primary btn-sm">Düzenle</a>
                    <button type="button" class="btn btn-danger btn-sm"
                            data-bs-toggle="modal"
                            data-bs-target="#deleteModal"
                            data-user-id="@user.Id"
                            data-user-name="@user.UserName">
                        Sil
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>
 *@
@* <!-- Silme Onay Modalı -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Silme Onayı</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <span id="deleteUserName"></span> kullanıcısını silmek istediğinizden emin misiniz?
                <br><small class="text-muted">Bu işlem geri alınamaz.</small>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hayır</button>
                <!-- Form ile POST request gönder -->
                <form id="deleteForm" asp-action="Delete" asp-controller="User" method="post" style="display: inline;">
                    <input type="hidden" id="deleteUserId" name="id" value="" />
                    <button type="submit" class="btn btn-danger">Evet, Sil</button>
                </form>
            </div>
        </div>
    </div>
</div> *@

@* <script>
    // Modal açıldığında kullanıcı bilgilerini ayarla
    document.addEventListener('DOMContentLoaded', function() {
        var deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var userId = button.getAttribute('data-user-id');
            var userName = button.getAttribute('data-user-name');

            var userNameSpan = deleteModal.querySelector('#deleteUserName');
            var deleteForm = deleteModal.querySelector('#deleteForm');
            var userIdInput = deleteModal.querySelector('#deleteUserId');

            userNameSpan.textContent = userName;
            userIdInput.value = userId;
        });
    });
</script> *@