@model NoteAppMVCPattern.Models.ViewModel.NoteIndexVM
@using System.Linq
@using NoteAppMVCPattern.Models.ViewModel;

@{
    Layout = "_noteIndexLayout";
    ViewData["Title"] = "Notlar";
    // Bu dictionary, her Tag adına bir renk atamak için kullanılır.
    Dictionary<string, string> tagColorPairs = new();
    List<string> colors = new() { "bg-warning", "bg-primary", "bg-danger", "bg-success", "bg-info" };
    int colorIndex = 0;
}
@await Html.PartialAsync("_TempDataMessage")

<div class="container py-4">
    @if (Model.Notes == null || Model.Notes.Count == 0)
    {
        <div class="text-center mt-5">
            <i class="bi bi-journal-x display-1 text-muted mb-3"></i>
            <p class="lead">Hiç notun yok.</p>
            <a asp-action="Create" class="btn btn-lg btn-primary">
                <i class="bi bi-journal-plus"></i> İlk Notunu Ekle
            </a>
        </div>
    }
    else
    {
        <div class="d-flex justify-content-end gap-2 mb-3">
            @if (Model.SelectedTagIds != null && Model.SelectedTagIds.Any())
            {
                @if (Model.CurrentTag != null)
                {
                    var tagcolor = Model.CurrentTag.TagColor.Substring(3);
                    var tagName = Model.CurrentTag.TagName;

                    <a class="btn btn-@tagcolor" asp-action="Index">Aktif tag : @tagName</a>
                }
                <a class="btn btn-danger" asp-action="Index">Filtreyi Kaldır</a>
            }

            <a asp-action="Create" class="btn btn-primary">
                <i class="bi bi-journal-plus"></i> Yeni Not
            </a>
            
            <div class="btn-group">
                <button type="button" class="btn btn-primary dropdown-toggle me-3" data-bs-toggle="dropdown">
                    Sırala
                </button>
                <ul class="dropdown-menu">
                    <li><a class="dropdown-item" asp-action="Index" asp-route-sortOrder="date_desc">Yeniden → Eskiye</a></li>
                    <li><a class="dropdown-item" asp-action="Index" asp-route-sortOrder="date_asc">Eskiden → Yeniye</a></li>
                    <li><hr class="dropdown-divider"></li>
                    <li class="dropdown-header">Tag’e Göre Filtrele</li>

                    @* Burada Model.AvailableTags (List<Tag>) kullanıldığını varsayıyoruz *@
                    @if (Model.Tags != null)
                    {
                        var tags = Model.Tags.OrderByDescending(t => t.TagUsageCount).Take(5).ToList();
                        @foreach (var tag in tags)
                        {
                            @* Filtreleme için Tag ID'sini kullanmak daha güvenlidir *@
                            <li><a class="dropdown-item" asp-action="Index" asp-route-tagIds="@tag.Id">@tag.TagName</a></li>
                        }
                    }
                </ul>
            </div>
        </div>

        <div class="container mt-3">
            @if (Model.ViewMode == "grid")
            {
                <div class="row g-3">
                    @foreach (var note in Model.Notes)
                    {
                        <partial name="_NoteCard" model="new NoteFooterVM 
                                {Note = note, Tags = Model.Tags}" />
                    }

                </div>                        
            }
           
            @* List View (Sadeleştirilmiş) *@
            @* else (Model.ViewMode == "list")
            {
                <ul class="list-group">
                    @for (int i = 0; i < Model.Notes.Count; i++)
                    {
                        var note = Model.Notes[i];
                        <li class="list-group-item d-flex align-items-start justify-content-between">
                            <div class="d-flex align-items-start">
                                <div class="me-3 text-muted fw-bold display-6">@(i + 1)</div>
                                <div>
                                    <h5 class="mb-1">@note.Title</h5>
                                    <p class="mb-0 text-muted small">@note.Content</p>
                                </div>
                            </div>

                            @if (note.Tags != null && note.Tags.Any())
                            {
                                <div class="d-flex align-self-center">
                                    @foreach (var tag in note.Tags)
                                    {
                                    @*
                                        if (!tagColorPairs.ContainsKey(tag.TagName))
                                        {
                                            tagColorPairs[tag.TagName] = colors[colorIndex % colors.Count];
                                            colorIndex++;
                                        }
                                        var color = tagColorPairs[tag.TagName]; 
                                       <div> 
                                           <button type="button"
                                            class="badge 
                                                 @tag.TagColor text-dark align-self-center me-2" 
                                                 style="cursor:pointer;"
                                                 onclick="selectTag('@tag.Id')">
                                                #@tag.TagName

                                            </button>
                                        
                                    </div>
                                    }
                                </div>
                            }
                        </li>
                    }
                </ul>
            } *@
        </div>
    }
</div>
<div id="modal-container"></div>

@section Scripts {
    <script>
        $(document).on("click", ".view-note", function () {
            const id = $(this).data("id");
            $.get(`/Note/NoteDetails?noteId=${id}`, function (data) {
                $("#modal-container").html(data);
                const modal = new bootstrap.Modal(document.getElementById('myModal'));
                modal.show();
            });
        });

        // Bagde onClick func.

            function selectTag(tagId) 
            {
            // örnek: filtreleme veya AJAX çağrısı
            console.log("Seçilen tag ID:", tagId);
            window.location.href = `/Note/Index?tagIds=${tagId}`;
            }
                     $(document).on("click", ".tag-color-partial", function () {
            const id = $(this).data("id");            
            $.get(`/Note/TagColorPage?tagId=${id}`, function (data) {
                $("#modal-container").html(data);
                const modal = new bootstrap.Modal(document.getElementById('tagColorUpdate'));
                modal.show();
            });              
                     });
        //                              $(document).ready(function () {
        //   $(".tag-search-input").on("keyup", function () {
        //     const noteId = $(this).data("note-id");
        //     const value = $(this).val().toLowerCase();
        //     $(`#tagdropdown-delete-${noteId} .tag-item`).each(function () {
        //       const text = $(this).text().toLowerCase();
        //       $(this).toggle(text.includes(value));
        //     });
        //   });
        // });

                $(document).ready(function () {
          $(".tag-search-input").on("keyup", function () {
            const noteId = $(this).data("note-id");
            const value = $(this).val().toLowerCase();
            const mode = $(this).data("mode");
            const items = $(`#tagdropdown-${noteId} .tag-${mode}-item`);

            if (value === "") {
              // Arama kutusu boşsa, sadece ilk 3 tag’i göster
              items.each(function (index) {
                $(this).css("display", index < 3 ? "block" : "none");
              });
            } else {
              // Arama varsa, eşleşenleri göster
              items.each(function () {
                const text = $(this).text().toLowerCase();
                $(this).css("display", text.includes(value) ? "block" : "none");
              });
            }
          });
        });

    </script>
}